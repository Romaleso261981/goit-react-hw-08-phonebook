{"version":3,"file":"static/js/664.cd462e79.chunk.js","mappings":"6SAUaA,EAAY,WAAO,IAAD,UACvBC,GAAWC,EAAAA,EAAAA,MAEjB,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,WACNC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,MATZC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAef,OACE,UAAC,IAAD,CACEE,UAAU,OACVC,SAAUL,GARG,SAAAM,GACff,GAASgB,EAAAA,EAAAA,IAAUD,IACnBL,GACD,IAMGO,GAAI,CACF,kBAAmB,CAAEC,GAAI,EAAGC,MAAO,QACnCC,SAAU,IACVC,UAAW,IACXC,OAAQ,YACRC,aAAc,EACdC,UAAW,4CACXC,QAAS,OACTC,gBAAiB,2BACjBC,WAAY,SACZC,UAAW,cAbf,WAgBE,8BAAIjB,QAAJ,IAAIA,GAAJ,UAAIA,EAAQkB,cAAZ,aAAI,EAAgBC,WACpB,SAAC,IAAD,CAAYb,GAAI,CAAEc,SAAU,GAAIC,UAAW,UAA3C,oBACA,SAAC,IAAD,CAAYf,GAAI,CAAEc,SAAU,GAAIC,UAAW,UAA3C,uCAGA,SAAC,KAAD,kBACMxB,EAAS,QAAS,CACpByB,SAAU,4BAFd,IAIEC,MAAM,YACNC,MAAM,QACNC,QAAa,OAANzB,QAAM,IAANA,GAAA,UAAAA,EAAQL,aAAR,UAAewB,SACtBO,WAAU,OAAE1B,QAAF,IAAEA,GAAF,UAAEA,EAAQL,aAAV,aAAE,EAAewB,YAE7B,SAAC,KAAD,kBACMtB,EAAS,WAAY,CACvByB,SAAU,yBACVK,UAAW,CACTC,MAAO,EACPT,QAAS,+BALf,IAQEI,MAAM,YACNM,KAAK,OACLL,MAAM,WACNC,QAAa,OAANzB,QAAM,IAANA,GAAA,UAAAA,EAAQJ,gBAAR,UAAkBuB,SACzBO,WAAU,OAAE1B,QAAF,IAAEA,GAAF,UAAEA,EAAQJ,gBAAV,aAAE,EAAkBuB,YAEhC,SAAC,IAAD,CACEU,KAAK,SACLvB,GAAI,CACFwB,QAAS,qBACT,UAAW,CAAEA,QAAS,uBAExBC,gBAAgB,QAChBC,WAAW,SAAC,IAAD,IACXC,QAAQ,YARV,uBAcL,EAED,W,2BC3FIC,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,SAAU,UACVC,EAAG,kLACD,YACJP,EAAQ,EAAUG,C","sources":["pages/LoginPage/LoginPage.jsx","../node_modules/@mui/icons-material/HowToReg.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { loginUser } from '../../redux/auth/authOperations';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { Typography } from '@mui/material';\nimport HowToRegIcon from '@mui/icons-material/HowToReg';\n\nexport const LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n  });\n\n  const onSubmit = dataUser => {\n    dispatch(loginUser(dataUser));\n    reset();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit(onSubmit)}\n      sx={{\n        '& > :not(style)': { mb: 2, width: '100%' },\n        maxWidth: 400,\n        minHeight: 150,\n        margin: '20px auto',\n        borderRadius: 2,\n        boxShadow: '0px 0px 15px 1px rgba(143, 144, 139, 0.6)',\n        padding: '20px',\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\n        alignItems: 'center',\n        boxSizing: 'border-box',\n      }}\n    >\n      <p>{errors?.number?.message}</p>\n      <Typography sx={{ fontSize: 35, textAlign: 'center' }}>Login</Typography>\n      <Typography sx={{ fontSize: 14, textAlign: 'center' }}>\n        using your email address\n      </Typography>\n      <TextField\n        {...register('email', {\n          required: 'This field is required',\n        })}\n        color=\"secondary\"\n        label=\"Email\"\n        error={errors?.email?.message ? true : false}\n        helperText={errors?.email?.message}\n      />\n      <TextField\n        {...register('password', {\n          required: 'This field is required',\n          minLength: {\n            value: 6,\n            message: 'Min length password is 6',\n          },\n        })}\n        color=\"secondary\"\n        type=\"text\"\n        label=\"Password\"\n        error={errors?.password?.message ? true : false}\n        helperText={errors?.password?.message}\n      />\n      <LoadingButton\n        type=\"submit\"\n        sx={{\n          bgcolor: 'rgb(146, 80 , 130)',\n          '&:hover': { bgcolor: 'rgb(194, 120, 118)' },\n        }}\n        loadingPosition=\"start\"\n        startIcon={<HowToRegIcon />}\n        variant=\"contained\"\n      >\n        Sing up\n      </LoadingButton>\n    </Box>\n  );\n};\n\nexport default LoginPage;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"m9 17 3-2.94c-.39-.04-.68-.06-1-.06-2.67 0-8 1.34-8 4v2h9l-3-3zm2-5c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m4.47 8.5L12 17l1.4-1.41 2.07 2.08 5.13-5.17 1.4 1.41z\"\n}), 'HowToReg');\nexports.default = _default;"],"names":["LoginPage","dispatch","useDispatch","useForm","mode","defaultValues","name","email","password","register","handleSubmit","reset","errors","formState","component","onSubmit","dataUser","loginUser","sx","mb","width","maxWidth","minHeight","margin","borderRadius","boxShadow","padding","backgroundColor","alignItems","boxSizing","number","message","fontSize","textAlign","required","color","label","error","helperText","minLength","value","type","bgcolor","loadingPosition","startIcon","variant","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","fillRule","d"],"sourceRoot":""}